% Utility script to help in setting / assessing PIV parameters
%
% This script is designed to be run cell-by-cell. Run a cell, inspect the
% results, and edit the parameter file until you are satisfied with the
% results. Note that some cells may depend on the results of previous
% cells.
%
% Expected variables in workspace:
% 
%   PARAM_FILE: path to parameters definition file. Use
%       piv_default_param() to create a template, and populate the
%       variables therein to suit your experiment.
% 
%   IMAGE_FILE: path to pre-processed image file MAT, as produced by
%       prep_series.m
% 
%   TEST_INDEX: int, index of initial image to use for single step test
% %

update_path('util', 'piv', 'post');

fprintf('Running PIV parameter check with:\n');
fprintf('\tPARAM_FILE = %s\n', PARAM_FILE);
fprintf('\tIMAGE_FILE = %s\n', IMAGE_FILE);
fprintf('\tTEST_INDEX = %i\n', TEST_INDEX);

%% PIV analysis for single image pair -- edit parameter file to change

param = load_param(PARAM_FILE);
image_data = matfile(IMAGE_FILE, 'Writable', false);

ini      = image_data.img(:, :, :, TEST_INDEX);
ini_mask = image_data.mask(:, :, TEST_INDEX);

fin      = image_data.img(:, :, :, TEST_INDEX + param.gap.value);
fin_mask = image_data.mask(:, :, TEST_INDEX + param.gap.value);

%% compute PIV
piv_result = piv_step(...
    ini, ...
    fin, ...
    ini_mask, ...
    fin_mask, ...
    image_data.x, ...
    image_data.y, ...
    param.samp_len.value, ...   
    param.samp_spc.value, ...
    param.intr_len.value, ...
    param.num_pass.value, ...
    param.valid_radius.value, ...
    param.valid_max.value, ...
    param.valid_eps.value, ...
    param.min_frac_data.value, ...
    param.min_frac_overlap.value);

%% compute strain (helps to judge PIV result quality)
strain_result = post_strain(...
    piv_result.x(1,:), ...
    piv_result.y(:,1), ... 
    piv_result.u, ...
    piv_result.v); 

% display results for user validation
display_image_pair(...
    image_data.x, ...
    image_data.y, ...
    ini, ...
    ini_mask, ...
    fin, ...
    fin_mask);
display_piv(piv_result);
display_strain(strain_result);
