Current issue: understand and eliminate spurious edge gradients.

Q1: Are there spurious edge gradients for...
  - fully populated images 
  - with displacement
  - single pass
  - spline interpolation of outliers
  - no smoothing

A1:
  1) [invalidated by #3 & #5, edge effects are reduced for un-equalized
  synthetic images] initial tests show NO edge effects for the synth test, but
  YES edge effects in image test.
  
  2) the difference is not size - the above remains true when the images size
  for synth is set the same as image, the edges are recongizably different, but
  not worse. 

  3) applying the equalization routine to the synthetic images makes the two
    results similar (both display bias at the edge)

  4) cropping off 40 pixels from all sides (> width of the equalization
    window) did not have any effect. The effect is not some "edge effect"
    in the equalization routine.

  5) to be sure, I disabled equalization for the synthetic images, and found that
    the edge effect is still there, just smaller

Q2: Is the problem related to data boundaries (e.g. the roi) or to the matrix
edges? 

A2:
  1) The problem is tied to the data boundaries, not the matrix edges. When I
  include a flat boundary within the matrix, the edge effect appears at that
  boundary, widens (from 1 pixel to 2 pixels), and worsens (from <0.5 pix to
  <0.9 pix). 

Q3: Is there any obvious difference in the correlation planes for edge- and
interior samples?

A3: Yes...

  1) Sample windows that contain a significant amount of (random) background are
  much noisier, and have poorly shaped (not gaussian, or even simple shaped)
  peaks.

  2) There is a significant bias in the x-direction at the lower boundary.

Q4: Does a "true" masked normalized cross correlation elimiate the bias?

A4:

  1) YES, for the synth test with no displacement and a horizontal boundary at y
  = 0.8. 

  2) YES, for the image test " "

  3) YES for both image and synth tests with horizontal boundary at y = 0.5, and
  with a sinusoidal boundary at witn mean = 0.7 and amplitude 0.2

Q5: It is necessary to cut off the correlation plane based on the number of
  overlapping pixels. Right now, I am using an arbitrary hard-coded value.  What
  is a reasonable choice for the overlap cutoff?

A5: The cutoff must be larger than the frac_data skip value, but less than a
  full window. I define two local parameters: a min_frac_data and a
  min_frac_overlap. For now, these are related by a simple multiple

Q6: Does the edge problem re-appear with non-zero (but constant) offsets?

A6: NO. The image test with uu = 10, vv = 10, and both yields similar(ly small)
errors to the zero offset case. The same is true for the synth case.

Q7: Does the edge problem re-appear with non-zero shear terms?

A7: 

  1) For image test with non-zero dudy, errors increase with increasing shear, but there is not
  concentrated high-error on the boundary. Switching back to the non-masked
  correlation yields noticable edge effect errors.

Q8: What is the effect of smoothing?

  0) Found a bug in the use of pppiv, in which I failed to supply an ROI (had
  previously uses NaNs, then stopped).

  1) For zero-displacement tests, it reduces noise, with no additional edge
  effects.

  2) For constant displacements in x, or y, or both, smoothing reduces noise
  without adding edge effects 

  3) For non-zero dudy shear, smoothing adds gradients at horizontal edges.
  Specifically, the bottom boundary, and horizontal or convex portions of the
  top boundary. Concave parts of the boundary are not obviously affected. 

  4) For non-zero dvdx shear, smoothing add gradients at vertical edges. I have
  no ability to test the importance of convexity.

Q9: Is the thin-plate-spline routine in MATLAB any better?

A9: For zero displacement, constant displacement and single non-zero shear
  terms, smoothing reduces noise without edge effects. For dual shear terms,
  everything goes to shit.

Q10: What is going wrong with the dual shear case?

A10:

  1) The errors are large (>1 pixel) for non-smoothed case as well.
  
  2) The errors return to normal levels (<0.05 pixels) only for small shear
  terms (i.e. 0.01)
 
  3) Relatively large single shear terms give errors on the order of 0.1 pixels

  4) The above suggest that either (a) my single pass routine is unable to
  adequately model this case, or, (b) my test case scripts are not computing the
  "true" solution correctly. Given other bugs in the test case (e.g. failure for
  negative displacements and shear terms), and also the performance for large
  single shear terms, the latter should be explored first.

  Update: Fixed the bugs in the create_image routine, and still get poor
  performance for large shears. One part of the explaination could be improper
  selection of the smoothing term, and another could be inherent difficulty in
  matching in the presence of large gradients.

Q11: Does multi-pass image deformation improve the various test cases?

A11:

  1) Zero offset, image test, no smoothing (tspline): error increases
  significantely with each pass, the errors appear to be (spatially) random,
  except at the upper boundary.  Here, there is a consistent bias in the
  positive direction for 2 pass, and in the negative direction for 3 pass. 

    1 pass
    qnt | uu    | vv    | mag
    0.00  | 3.39e-05  | 1.30e-05  | 6.08e-04
    0.25  | 3.33e-03  | 3.35e-03  | 8.40e-03
    0.50  | 7.87e-03  | 6.82e-03  | 1.30e-02
    0.75  | 1.38e-02  | 1.22e-02  | 1.87e-02
    1.00  | 2.82e-02  | 3.23e-02  | 3.30e-02

    2 pass
    qnt | uu    | vv    | mag
    0.00  | 7.76e-05  | 4.90e-05  | 2.07e-03
    0.25  | 5.34e-03  | 5.60e-03  | 1.41e-02
    0.50  | 1.22e-02  | 1.14e-02  | 2.08e-02
    0.75  | 2.09e-02  | 1.94e-02  | 3.08e-02
    1.00  | 4.16e-02  | 6.55e-02  | 6.62e-02

    3 pass
    qnt | uu    | vv    | mag
    0.00  | 1.94e-05  | 2.23e-04  | 3.05e-03
    0.25  | 7.65e-03  | 7.41e-03  | 1.76e-02
    0.50  | 1.57e-02  | 1.39e-02  | 2.63e-02
    0.75  | 2.55e-02  | 2.49e-02  | 3.57e-02
    1.00  | 4.94e-02  | 7.23e-02  | 7.44e-02

  2) Zero offset, image test, tpaps smoothing, automatic selection of smoothing
  parameter: Errors increase modestly after the first interpolation pass, then
  stabilize. No bias at the upper boundary as observed above.

  1 pass:
    tpaps smoothing parameter = 0.000043
    qnt | uu    | vv    | mag
    0.00  | 3.50e-06  | 3.29e-05  | 1.80e-04
    0.25  | 7.14e-04  | 7.71e-04  | 1.94e-03
    0.50  | 1.50e-03  | 1.82e-03  | 3.09e-03
    0.75  | 2.58e-03  | 3.22e-03  | 4.34e-03
    1.00  | 6.50e-03  | 6.92e-03  | 7.27e-03

  2 pass:
    tpaps smoothing parameter = 0.000043
    tpaps smoothing parameter = 0.000044
    displacement vector error quantiles
    qnt | uu    | vv    | mag
    0.00  | 3.18e-05  | 9.45e-07  | 1.87e-04
    0.25  | 7.27e-04  | 1.04e-03  | 2.36e-03
    0.50  | 1.70e-03  | 2.21e-03  | 3.67e-03
    0.75  | 3.12e-03  | 3.87e-03  | 5.24e-03
    1.00  | 1.09e-02  | 1.33e-02  | 1.34e-02

  3 pass: 
    tpaps smoothing parameter = 0.000043
    tpaps smoothing parameter = 0.000044
    tpaps smoothing parameter = 0.000044
    displacement vector error quantiles
    qnt | uu    | vv    | mag
    0.00  | 1.75e-06  | 7.13e-06  | 1.76e-05
    0.25  | 7.33e-04  | 8.25e-04  | 2.21e-03
    0.50  | 1.73e-03  | 1.99e-03  | 3.68e-03
    0.75  | 3.28e-03  | 3.72e-03  | 5.42e-03
    1.00  | 1.15e-02  | 1.26e-02  | 1.26e-02

 3) Constant displacement (+10, +10), tpaps smoothing, automatic smoothing
 parameter: small increase in error with each pass

  1 pass:
    tpaps smoothing parameter = 0.000047
    displacement vector error quantiles
    qnt | uu    | vv    | mag
    0.00  | 7.00e-06  | 5.55e-06  | 2.56e-04
    0.25  | 9.83e-04  | 7.66e-04  | 2.04e-03
    0.50  | 2.02e-03  | 1.49e-03  | 3.01e-03
    0.75  | 3.28e-03  | 2.80e-03  | 4.29e-03
    1.00  | 1.59e-02  | 1.31e-02  | 1.59e-02

  2 pass:
    tpaps smoothing parameter = 0.000047
    tpaps smoothing parameter = 0.000048
    displacement vector error quantiles
    qnt | uu    | vv    | mag
    0.00  | 3.17e-06  | 1.99e-06  | 1.69e-04
    0.25  | 6.86e-04  | 9.19e-04  | 2.05e-03
    0.50  | 1.71e-03  | 2.33e-03  | 3.74e-03
    0.75  | 3.31e-03  | 4.32e-03  | 6.26e-03
    1.00  | 1.99e-02  | 1.50e-02  | 1.99e-02

  3 pass: 
   tpaps smoothing parameter = 0.000047
   tpaps smoothing parameter = 0.000048
   tpaps smoothing parameter = 0.000047
   displacement vector error quantiles
   qnt  | uu    | vv    | mag
   0.00 | 3.06e-05  | 4.11e-06  | 4.12e-04
   0.25 | 9.11e-04  | 7.64e-04  | 2.19e-03
   0.50 | 2.22e-03  | 2.08e-03  | 3.84e-03
   0.75 | 3.80e-03  | 3.85e-03  | 5.80e-03
   1.00 | 2.30e-02  | 1.69e-02  | 2.30e-02

 4) Non-zero dudy shear term (0.05), tpaps smoothing, automatic smoothing
 parameter: 2nd pass introduces major edge gradients, but decreases the median
 error. METHODS PROBLEM HERE. 

    1) pass:
      tpaps smoothing parameter = 0.000046
      displacement vector error quantiles
      qnt  | uu    | vv    | mag
      0.00 | 9.77e-05  | 7.05e-05  | 1.22e-03
      0.25 | 4.47e-03  | 3.24e-03  | 8.32e-03
      0.50 | 8.41e-03  | 6.31e-03  | 1.33e-02
      0.75 | 1.47e-02  | 1.07e-02  | 1.80e-02
      1.00 | 5.34e-02  | 2.09e-02  | 5.34e-02

    2 pass: 
      tpaps smoothing parameter = 0.000046
      tpaps smoothing parameter = 0.000047
      displacement vector error quantiles
      qnt  | uu    | vv    | mag
      0.00 | 3.22e-05  | 3.65e-06  | 4.36e-04
      0.25 | 2.18e-03  | 1.30e-03  | 3.78e-03
      0.50 | 5.16e-03  | 2.63e-03  | 7.04e-03
      0.75 | 2.49e-02  | 4.95e-03  | 2.50e-02
      1.00 | 1.01e-01  | 1.33e-02  | 1.01e-01

    3 pass:
      tpaps smoothing parameter = 0.000046
      tpaps smoothing parameter = 0.000047
      tpaps smoothing parameter = 0.000047
      displacement vector error quantiles
      qnt | uu    | vv    | mag
      0.00  | 4.12e-06  | 2.90e-06  | 6.05e-05
      0.25  | 2.23e-03  | 9.26e-04  | 3.74e-03
      0.50  | 5.49e-03  | 2.06e-03  | 7.15e-03
      0.75  | 2.59e-02  | 4.63e-03  | 2.63e-02
      1.00  | 9.34e-02  | 1.12e-02  | 9.35e-02

  5) Non-zero dudy shear term, no smoothing, tspline interpolation with t = 0.9:
  For more than one pass, strong gradients appear at the top and bottom of the
  wedge, at the same time, the median error is reduced. THE METHOD PROBLEM IS
  NOT SMOOTHING-RELATED.

    1 pass:
      displacement vector error quantiles
      qnt | uu    | vv    | mag
      0.00  | 3.62e-05  | 3.24e-04  | 3.96e-03
      0.25  | 1.47e-02  | 1.02e-02  | 2.95e-02
      0.50  | 3.38e-02  | 2.16e-02  | 4.74e-02
      0.75  | 6.22e-02  | 3.20e-02  | 6.93e-02
      1.00  | 1.78e-01  | 6.86e-02  | 1.79e-01

    2 pass:
      nt  | uu    | vv    | mag
      0.00  | 2.57e-04  | 7.63e-05  | 2.50e-03
      0.25  | 1.35e-02  | 8.57e-03  | 2.35e-02
      0.50  | 2.80e-02  | 1.90e-02  | 3.87e-02
      0.75  | 5.49e-02  | 2.98e-02  | 6.28e-02
      1.00  | 5.51e-01  | 8.93e-02  | 5.51e-01

    3 pass: 
      qnt | uu    | vv    | mag
      0.00  | 1.80e-05  | 1.87e-05  | 1.83e-03
      0.25  | 1.19e-02  | 7.78e-03  | 2.13e-02
      0.50  | 2.73e-02  | 1.63e-02  | 3.72e-02
      0.75  | 5.01e-02  | 2.90e-02  | 5.98e-02
      1.00  | 8.61e-01  | 7.66e-02  | 8.62e-01

Q12: Why does the boundary degrade in my multipass routine?

A12:
  
  1) The problem could be related to artifacts at the edge of the deformed
  images. The boundaries appear blurred, and there are pixels outside the range
  [0, 1]. These artefacts appear at all boundaries. 

  If this is the cause, then the problem should appear for both tspline and
  tpaps in all cases with non-zero displacement. However, the automatic
  selection of the smoothing parameter is nearly zero, and so gives almost all
  weight to minimizing the roughness parameter. At this extreme, the edge
  gradient might be smoothed.

  How to improve the edges of the deformed image? Any deformation technique I
  know of will use a kernel resampling to get pixel values in the new image, and
  so may blur the initial sharp edges. I think the key is to ensure that
  questionable pixels are ignored by the masked_normxcorr2 routine, which means
  imposing a sharp roi mask.

    a) The SmoothEdges feature in imwarp makes the boundaries worse at the image
    edges. Turn this off.

    b) Exploring the impact of the boundary on image deformation by warping the
    ROI mask. With SmoothEdges off, there is a band 2-4 pixels wide along the
    upper boundary that affected by the boundary. Curioiusly, the bottom and
    sides do not appear to be affected.

    c) I think I can treat this by re-masking the deformed images with a
    deformed ROI. This is complicated by the presence of numerical overshoot in
    the deformed ROI (so that pixels that should be 0 are not strictly 0), which
    requires choice of a numerical tolerance (roi_epsilon). Regardless, a
    clean deformed ROI did NOT fix the edge gradient issue, but did yeild a
    small improvement in accuracy. Results below are for the image test with
    dudy = 0.05
    
      CLEAN ROI:
      qnt | uu    | vv    | mag
      0.00  | 2.57e-04  | 1.65e-04  | 2.50e-03
      0.25  | 1.35e-02  | 8.68e-03  | 2.34e-02
      0.50  | 2.82e-02  | 1.85e-02  | 3.87e-02
      0.75  | 5.32e-02  | 2.93e-02  | 6.23e-02
      1.00  | 5.17e-01  | 6.37e-02  | 5.18e-01


      ORIGINAL:
      qnt | uu    | vv    | mag
      0.00  | 2.57e-04  | 7.63e-05  | 2.50e-03
      0.25  | 1.35e-02  | 8.57e-03  | 2.35e-02
      0.50  | 2.80e-02  | 1.90e-02  | 3.87e-02
      0.75  | 5.49e-02  | 2.98e-02  | 6.28e-02
      1.00  | 5.51e-01  | 8.93e-02  | 5.51e-01

  2) I notice that there is still an interpolation to the full grid using a
  gridded spline interpolant, and a quick glance at its results shows anomolous
  warping at the bottom of the image. Nothing is clearly visible at the top, but
  it may be there as well. This is very likely a source of error to be pursued
  ASAP.

    a) Tried using tspline to interpolate to the full grid. These results are
    for no smoothing with dudy = 0.05. They are IMPROVED. Error maps do not
    show clear edge effects as they have in previous tests. However, the upper
    boundary still appears "hot" in the strain plot. This could reflect
    increased uncertainty at the boundary, or could be lingering method
    problems.

      1 pass:
      qnt | uu    | vv    | mag
      0.00  | 3.62e-05  | 3.24e-04  | 3.96e-03
      0.25  | 1.47e-02  | 1.02e-02  | 2.95e-02
      0.50  | 3.38e-02  | 2.16e-02  | 4.74e-02
      0.75  | 6.22e-02  | 3.20e-02  | 6.93e-02
      1.00  | 1.78e-01  | 6.86e-02  | 1.79e-01

      2 pass:
      0.00  | 9.49e-05  | 1.22e-05  | 2.34e-03
      0.25  | 1.31e-02  | 7.99e-03  | 2.31e-02
      0.50  | 2.79e-02  | 1.84e-02  | 3.66e-02
      0.75  | 4.64e-02  | 2.95e-02  | 5.42e-02
      1.00  | 1.58e-01  | 6.07e-02  | 1.60e-01

      3 pass:
      qnt | uu    | vv    | mag
      0.00  | 3.23e-05  | 3.03e-06  | 1.19e-03
      0.25  | 1.18e-02  | 8.02e-03  | 2.22e-02
      0.50  | 2.73e-02  | 1.74e-02  | 3.78e-02
      0.75  | 4.93e-02  | 3.04e-02  | 5.66e-02
      1.00  | 2.21e-01  | 6.85e-02  | 2.22e-01

    b) Trying the same tests with tpaps, the performance is very bad. Edge
    gradients are very strong, and manually varying the smoothing parameter does
    not improve the fit. Additionally, the interpolated full resolution
    velocities don't have the obvious wavy artefacts I observed in the old
    method, so if the problem is there, it is subtle. 

    c) To see if overshooting is the problem, I will explore the effect of the
    tension parameter in the TSPLINE method. It could be --- the solution
    improves for (very) high values of the tension parameter. For a 2 pass test
    with dudy = 0.05, results are below. The summary stats fail to show that the
    max tension test has low errors in displacements at the edge, but still
    exhibits relatively high edge strains.

      t = 1-eps
      qnt | uu    | vv    | mag
      0.00  | 1.39e-05  | 2.01e-05  | 1.12e-03
      0.25  | 1.09e-02  | 4.32e-03  | 1.66e-02
      0.50  | 2.55e-02  | 1.20e-02  | 3.55e-02
      0.75  | 4.57e-02  | 2.83e-02  | 5.49e-02
      1.00  | 1.76e-01  | 7.47e-02  | 1.77e-01

      t = 0.9
      qnt  | uu    | vv    | mag
      0.00  | 9.49e-05  | 1.22e-05  | 2.34e-03
      0.25  | 1.31e-02  | 7.99e-03  | 2.31e-02
      0.50  | 2.79e-02  | 1.84e-02  | 3.66e-02
      0.75  | 4.64e-02  | 2.95e-02  | 5.42e-02
      1.00  | 1.58e-01  | 6.07e-02  | 1.60e-01

    d) Added a new interpolation/smoothing option: lowess. In theory, this
    should behave well at data boundaries, and I should be able to extract local
    gradient information from the fits. Also, a line fit should perfectly fit my
    test case at the very least.
      
      i) For dudy = 0.05, robust = LAR, span = 0.05: single pass shows no edge
      effects and has reduced (halved) errors, dual-pass has extreme edge
      gradients.

        1 pass:
        qnt | uu    | vv    | mag
        0.00  | 1.10e-04  | 6.82e-06  | 9.16e-04
        0.25  | 5.35e-03  | 3.33e-03  | 1.26e-02
        0.50  | 1.24e-02  | 8.00e-03  | 1.79e-02
        0.75  | 1.99e-02  | 1.44e-02  | 2.44e-02
        1.00  | 7.00e-02  | 3.40e-02  | 7.23e-02

        2 pass:
        qnt | uu    | vv    | mag
        0.00  | 1.00e-05  | 3.24e-06  | 2.23e-04
        0.25  | 1.83e-03  | 1.64e-03  | 4.52e-03
        0.50  | 5.72e-03  | 3.18e-03  | 8.56e-03
        0.75  | 3.77e-02  | 5.82e-03  | 3.78e-02
        1.00  | 1.32e-01  | 1.81e-02  | 1.32e-01

Q13: Why do smoothed results degrade for multipass runs?

A13:

  1) I generated exact full resolution solutions for the images test case with
  dudy = 0.05, which I can load instead of interpolation to full resolution.
  This removes errors associated with the displacement field for image
  interpolation.

  In addition, I keep track of the velocity field adjustments made for each pass
  (duu stores all the delta_uu values). This data allows me to check whether the
  PIV is performing poorly at the boundaries for pass > 1.

  The results are puzzling: 
    - Exact full resolution solutions have no influence on the edge gradients.
    - Displacement adjustments for pass > 1 appear spatially random.

  Thus, it is NOT the image deformation or the PIV routine itself --- if it
  were, then the displacement adjustments would show an edge gradient, which
  they do not.

  2) I stored the pre-interp/smoothing grids and added plotting routines to show
  the effect of smoothing. For TPAPS, these clearly show that smoothing
  introduces edge gradients.

  This problem could be the smoothing routine itself, or ot could be the
  centroid grid, or god knows what.

  3) Tried ignoring the centroid position for TSPLINE, found that the using
  centroids decreases error at top and bottom boundaries and reverses its sign.
  This suggests that the extrapolation is overshooting.









Other observations:

  The wedge test case still has substatial edge gradients in the un-smoothed,
  normxcorr2_masked case. These disappear when a large mask erosion radius us
  used on the original images, which suggests that the gradient is real. 

  My plan is to refine the methods so that the test cases never show edge
  gradients, then the wedge results can be interpreted with confidence. An
  additional test using manual particle tracking may be useful if the edge
  gradient is large enough to rise above the error in manual point selection.

  ---

  Image deformation expands the range of the image beyond [0,1]. I am not sure
  if this is a problem, and if so, how best to correct it.

  ---

  I'd like to stop relying on a "flag" value for masking, and instead use the
  ROI matrices directly.

